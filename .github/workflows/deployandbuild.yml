name: CI/CD to EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: deploy-main
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  REMOTE_DIR: '~/Strands-Frontend'
  PM2_APP: 'frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - run: npm ci
      - run: npm run build

      - name: Package dist
        run: |
          mkdir -p release
          tar -czf release/dist.tar.gz dist
          ls -l release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: release/dist.tar.gz
          if-no-files-found: error
          retention-days: 7

  deploy:
  runs-on: ubuntu-latest
  needs: build
  steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: .

    - name: List downloaded files
      run: |
        set -eux
        ls -lah
        tar -tzf dist.tar.gz | head -n 20

    # âœ… Write RSA key from secret to a file (handle CRLF, perms, sanity checks)
    - name: Prepare SSH key
      run: |
        set -euo pipefail
        if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then
          echo "EC2_SSH_KEY is empty (check repo Settings > Secrets)" >&2
          exit 1
        fi
        umask 077
        # Preserve newlines and strip CR from Windows line endings
        printf "%s" "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > key.pem
        # Basic sanity checks without leaking the key
        head -n1 key.pem | grep -q "BEGIN RSA PRIVATE KEY" || (echo "Not an RSA PEM" >&2; exit 1)
        tail -n1 key.pem | grep -q "END RSA PRIVATE KEY" || (echo "PEM footer missing" >&2; exit 1)
        chmod 600 key.pem
        # Optional: fingerprint for debugging (safe hash, no contents)
        echo "PEM md5: $(md5sum key.pem | cut -d' ' -f1)"

    - name: Prep remote dirs
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}   # should be 'ubuntu'
        key_path: key.pem
        script: |
          set -euxo pipefail
          BASE=${{ env.REMOTE_DIR }}
          mkdir -p "$BASE/releases" "$BASE/current"
          chown -R $USER:$USER "$BASE"

    - name: Upload to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key_path: key.pem
        source: ./dist.tar.gz
        target: ${{ env.REMOTE_DIR }}/releases/

    - name: Activate release on EC2
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key_path: key.pem
        script: |
          set -euo pipefail
          BASE=${{ env.REMOTE_DIR }}
          REL="${BASE}/releases"
          CUR="${BASE}/current"
          TS="$(date +%Y%m%d%H%M%S)"
          NEW="${REL}/${TS}"

          mkdir -p "$NEW"
          tar -xzf "${REL}/dist.tar.gz" -C "$NEW"
          ln -sfn "${NEW}/dist" "$CUR"

          if ! command -v pm2 >/dev/null; then sudo npm i -g pm2 serve; fi
          pm2 reload ${{ env.PM2_APP }} || pm2 start serve --name ${{ env.PM2_APP }} -- -s "$CUR" -l 4173
          pm2 save || true

          cd "$REL" && ls -1dt */ | tail -n +6 | xargs -r rm -rf
